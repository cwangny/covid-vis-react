{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","md","cx","card","infected","CardContent","Typography","variant","start","end","value","duration","separator","color","Date","toDateString","varient","url","fetchData","a","axios","get","modifiedData","fetchDailyData","modifiedResponse","map","dailyData","total","date","reportDate","deltaConfirmed","deltaConfirmedDetail","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82158519.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}})=> {\n    if (!confirmed) {\n        return 'Loading Data...';\n    }\n    \n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography variant=\"h5\">\n                            Infected\n                        </Typography>\n                        <Typography>\n                            <CountUp \n                                start={0}\n                                end={confirmed.value}\n                                duration={3}\n                                separator=\",\"\n                            ></CountUp>\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                        {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        \n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography variant=\"h5\">\n                            Recovered\n                        </Typography>\n                        <Typography varient=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={recovered.value}\n                                duration={3}\n                                separator=\",\"\n                            ></CountUp>\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        \n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography variant=\"h5\">\n                            Deaths\n                        </Typography>\n                        <Typography varient=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={deaths.value}\n                                duration={3}\n                                separator=\",\"\n                            ></CountUp>\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards; ","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async() => {\n    try {\n        // destructure to singleout the data object. \n        const {data} = await axios.get(url);\n\n        const modifiedData = {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n            lastUpdate: data.lastUpdate\n        }\n        \n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\n// function to fetch graph data\n\nexport const fetchDailyData = async() => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedResponse = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n            deltaConfirmed: dailyData.deltaConfirmedDetail.total,\n            \n        }))\n\n        //console.log(modifiedResponse);\n        return modifiedResponse;\n    } catch (error) {\n\n    }\n}","import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api/index';\nimport {Line} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ()=> {\n    const [dailyData, setDailyData] = useState({});\n\n    // In a class based component the following code is used to manipulate the state. In a functional component, setState hook does the exact same thing. \n    //\n    // state = {\n    //     dailyData: {}\n    // }\n    //\n    // this.setState({dailyData:fetcheddata})\n\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, [dailyData])\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line data={{\n                labels: dailyData.map(({date}) => date),\n\n                datasets:[\n                {\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: 'rebeccapurple',\n                    fill: true\n                }, \n                {\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    fill: true\n                },\n                {\n                    data: dailyData.map(({deltaConfirmed}) => deltaConfirmed),\n                    label: 'Delta Confirmed',\n                    borderColor: 'gold',\n                    fill: true\n                }\n                ]\n            }} />\n        ) : null\n    )\n           \n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Chart; ","import React from 'react';\n// importing components\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\n// importing css styles, .module.css files enable the css styles to have a local scope. \nimport styles from './App.module.css';\n\nimport { fetchData } from './api/index';\n\n// Only class based componenet that we need. Class based component cannot use hooks. \nclass App extends React.Component {\n  // write additional js code here.\n  \n  state = {\n    data: {},\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    // fills the state with values \n    this.setState({data:fetchedData});\n\n    \n  }\n\n  render() {\n    return (\n      // JSX \n      <div className={styles.container}>\n        <Cards data={this.state.data}/>\n        <Chart />\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}